# TODOS:
## use ansible pattern: /tasks, /files, /defaults...
## make all hardcoded stuff in /defauls as variables
## install missing packages with key/repo using chrome example

- hosts: localhost
  become: true
  
  # ask for qnap password
  vars_prompt:
  - name: password
    prompt: "...and your password for qnap sync (user janek) is?"
  
  tasks:
  - name: Upgrade all packages to the latest version
    apt:
      name: "*"
      state: latest
  - name: Install tools
    apt:
      name:
        - htop
        - mc
        - keepassx
        - vim
        - clipit
        - gitg
        - clusterssh
        - jq
        - apt-transport-https
        - libpangox-1.0-0
        - libcanberra-gtk-module
        - freerdp2-x11
        - nmap
        - owncloud-client-cmd
        - curl

  # copy exclude file to the host
  - name: Copy file with owner and permissions
    copy:
      src: ~/exclude
      dest: /root/exclude
  
  # setup sync
  - name: setup cron job entry to sync from nas (user root) on boot"
    cron:
      name: "Set up qnap sync"
      special_time: reboot
      job: "test owncloudcmd --exclude ~/exclude -u janek -p {{password}} --non-interactive -h /home/szczyrja/test https://janek.guru/owncloud/remote.php/webdav/Linux" 

#   # setup sync
#   - name: setup cron job entry to sync from nas (user root) every 2h"
#     cron:
#       name: "Set up qnap sync"
#       minute: "01"
#       hour: "*/2"
#       job: "owncloudcmd --exclude ~/exclude -u janek -p {{password}} --non-interactive -h /home/szczyrja/test https://janek.guru/owncloud/remote.php/webdav/Linux"

  # install chrome
  - name: "apt | ensure Google linux signing key present"
    apt_key: url=https://dl-ssl.google.com/linux/linux_signing_key.pub state=present

  - name: "apt | ensure Google chrome repo present"
    apt_repository:
      repo: "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"
      filename: "google-chrome"
      state: present
      update_cache: yes

  - name: "apt | ensure Google chrome present"
    apt:
      name: google-chrome-stable
      state: present

  # install brave
  - name: "apt | ensure Brave linux signing key present"
    apt_key: url=https://brave-browser-apt-release.s3.brave.com/brave-core.asc state=present

  - name: "apt | ensure Brave repo present"
    apt_repository:
      repo: "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"
      filename: "brave-browser"
      state: present
      update_cache: yes

  - name: "apt | ensure Google chrome present"
    apt:
      name: brave-browser
      state: present

# install docker

  - name: Add Docker GPG key
    apt_key: url=https://download.docker.com/linux/ubuntu/gpg

  - name: Install basic list of packages
    apt:
      name: ['apt-transport-https','ca-certificates','curl','gnupg2','software-properties-common']
      state: present
      update_cache: yes

  - name: Add Docker APT repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu $(. /etc/os-release; echo "$UBUNTU_CODENAME")/gpg stable

  - name: Install Docker packages
    apt:
      name: ['docker-ce','docker-ce-cli','containerd.io']
      state: present

  - name: Install Docker-compose
    shell: curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose && ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

# # chrome
# wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

# # atom
# sudo add-apt-repository ppa:webupd8team/atom

# # cisco anyconnect missing library libpangox-1.0-0 libcanberra-gtk-module (installed below)
# curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
# echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list

# # update
# sudo apt update

# # slack
# #wget https://downloads.slack-edge.com/linux_releases/slack-desktop-3.3.8-amd64.deb
# #sudo dpkg -i slack-desktop-3.3.8-amd64.deb

# # k9s
# wget $(curl -sL https://api.github.com/repos/derailed/k9s/releases/latest | jq -r '.assets[].browser_download_url' | grep Linux_x86_64)
# sudo tar -xvf k9s_*_Linux_x86_64.tar.gz -C /usr/bin/ k9s
# rm -f k9s*.tar.gz

# # keepalive
# sudo bash -c 'echo "    ServerAliveInterval 300" >> /etc/ssh/ssh_config'
# sudo bash -c 'echo "    ServerAliveCountMax 2" >> /etc/ssh/ssh_config'

# # crontab
# sudo cp -p ~/Documents/iSTA/crontab_szczyrja /var/spool/cron/crontabs/szczyrja

# # ras
# firefox ras.ista24.com
